import{r as n}from"./index-DOYzD9QA.js";import{y}from"./index-H1wMl_tP.js";import{c as E}from"./index-DPl6ftfI.js";import{P as g}from"./index-CgS8wkV7.js";import{j as d}from"./jsx-runtime-DATRzywu.js";import{r as I}from"./color.prop-Bz4j-_70.js";import{o as R}from"./high-contrast.prop-BhzBAZU8.js";import{r as h}from"./radius.prop-1IxjFv-s.js";import{v as _,l as M}from"./extract-props-8lbMlImM.js";import{r as V}from"./margin.props-DI7zkkCN.js";var c="Progress",p=100,[j,Y]=E(c),[A,C]=j(c),x=n.forwardRef((r,e)=>{const{__scopeProgress:i,value:t=null,max:o,getValueLabel:u=S,...m}=r;(o||o===0)&&!v(o)&&console.error(w(`${o}`,"Progress"));const a=v(o)?o:p;t!==null&&!f(t,a)&&console.error(D(`${t}`,"Progress"));const s=f(t,a)?t:null,b=l(s)?u(s,a):void 0;return d.jsx(A,{scope:i,value:s,max:a,children:d.jsx(g.div,{"aria-valuemax":a,"aria-valuemin":0,"aria-valuenow":l(s)?s:void 0,"aria-valuetext":b,role:"progressbar","data-state":$(s,a),"data-value":s??void 0,"data-max":a,...m,ref:e})})});x.displayName=c;var P="ProgressIndicator",N=n.forwardRef((r,e)=>{const{__scopeProgress:i,...t}=r,o=C(P,i);return d.jsx(g.div,{"data-state":$(o.value,o.max),"data-value":o.value??void 0,"data-max":o.max,...t,ref:e})});N.displayName=P;function S(r,e){return`${Math.round(r/e*100)}%`}function $(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function v(r){return l(r)&&!isNaN(r)&&r>0}function f(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function w(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${p}\`.`}function D(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${p} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var L=x,O=N;const T=["1","2","3"],z=["classic","surface","soft"],G={size:{type:"enum",className:"rt-r-size",values:T,default:"2",responsive:!0},variant:{type:"enum",className:"rt-variant",values:z,default:"surface"},...I,...R,...h,duration:{type:"string"}},F=n.forwardRef((r,e)=>{const{className:i,style:t,color:o,radius:u,duration:m,...a}=_(r,G,V);return n.createElement(L,{"data-accent-color":o,"data-radius":u,ref:e,className:y("rt-ProgressRoot",i),style:M({"--progress-duration":"value"in a?void 0:m,"--progress-value":"value"in a?a.value:void 0,"--progress-max":"max"in a?a.max:void 0},t),...a,asChild:!1},n.createElement(O,{className:"rt-ProgressIndicator"}))});F.displayName="Progress";export{F as s};
